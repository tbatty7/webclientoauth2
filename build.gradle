plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.battybuilds'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'com.squareup.okhttp3:okhttp:4.9.3'
	testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.3'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

def utils = new File("../analysis_utils")
if (!utils.exists()) {
	exec {
		try {
			commandLine 'git', 'clone', 'https://github.com/schuchert/analysis_utils.git', '../analysis_utils'
		} catch (e) {
			print "Unable to find ../analysis_utils."
			print "Attempt to clone repo failed."
			print "Are your proxy settings correct?"
			print e.getMessage()
		}
	}
}
if (utils.exists()) {
	apply from: "../analysis_utils/install_support/gradle/eCoach.gradle"
	test.finalizedBy(checkDuplication)
} else {
	print "Appears that ../analysis_utils has not been cloned."
	print "Check your proxy settings?"
}

tasks.register('printProps') {
	doLast {
		println System.getProperties()
	}
}

test {
	systemProperties(System.getProperties())
}

bootRun {
	properties { System.getProperties() }
}
